/*
 * generated by Xtext
 */
package com.avaloq.tools.ddk.xtext.valid.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.avaloq.tools.ddk.xtext.valid.services.ValidGrammarAccess;

public class ValidParser extends AbstractContentAssistParser {
	
	@Inject
	private ValidGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.avaloq.tools.ddk.xtext.valid.ui.contentassist.antlr.internal.InternalValidParser createParser() {
		com.avaloq.tools.ddk.xtext.valid.ui.contentassist.antlr.internal.InternalValidParser result = new com.avaloq.tools.ddk.xtext.valid.ui.contentassist.antlr.internal.InternalValidParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRuleAccess().getAlternatives(), "rule__Rule__Alternatives");
					put(grammarAccess.getPredefinedRuleAccess().getAlternatives(), "rule__PredefinedRule__Alternatives");
					put(grammarAccess.getContextAccess().getAlternatives(), "rule__Context__Alternatives");
					put(grammarAccess.getCheckKindAccess().getAlternatives(), "rule__CheckKind__Alternatives");
					put(grammarAccess.getSeverityKindAccess().getAlternatives(), "rule__SeverityKind__Alternatives");
					put(grammarAccess.getQuickFixKindAccess().getAlternatives(), "rule__QuickFixKind__Alternatives");
					put(grammarAccess.getValidModelAccess().getGroup(), "rule__ValidModel__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getCategoryAccess().getGroup(), "rule__Category__Group__0");
					put(grammarAccess.getCategoryAccess().getGroup_4(), "rule__Category__Group_4__0");
					put(grammarAccess.getNativeRuleAccess().getGroup(), "rule__NativeRule__Group__0");
					put(grammarAccess.getNativeRuleAccess().getGroup_5(), "rule__NativeRule__Group_5__0");
					put(grammarAccess.getSizeRuleAccess().getGroup(), "rule__SizeRule__Group__0");
					put(grammarAccess.getSizeRuleAccess().getGroup_6(), "rule__SizeRule__Group_6__0");
					put(grammarAccess.getSizeRuleAccess().getGroup_7(), "rule__SizeRule__Group_7__0");
					put(grammarAccess.getSizeRuleAccess().getGroup_9(), "rule__SizeRule__Group_9__0");
					put(grammarAccess.getRangeRuleAccess().getGroup(), "rule__RangeRule__Group__0");
					put(grammarAccess.getRangeRuleAccess().getGroup_6(), "rule__RangeRule__Group_6__0");
					put(grammarAccess.getRangeRuleAccess().getGroup_7(), "rule__RangeRule__Group_7__0");
					put(grammarAccess.getRangeRuleAccess().getGroup_9(), "rule__RangeRule__Group_9__0");
					put(grammarAccess.getUniqueRuleAccess().getGroup(), "rule__UniqueRule__Group__0");
					put(grammarAccess.getUniqueRuleAccess().getGroup_6(), "rule__UniqueRule__Group_6__0");
					put(grammarAccess.getUniqueRuleAccess().getGroup_7(), "rule__UniqueRule__Group_7__0");
					put(grammarAccess.getSimpleContextAccess().getGroup(), "rule__SimpleContext__Group__0");
					put(grammarAccess.getSimpleContextAccess().getGroup_1(), "rule__SimpleContext__Group_1__0");
					put(grammarAccess.getDuplicateContextAccess().getGroup(), "rule__DuplicateContext__Group__0");
					put(grammarAccess.getDuplicateContextAccess().getGroup_1(), "rule__DuplicateContext__Group_1__0");
					put(grammarAccess.getNativeContextAccess().getGroup(), "rule__NativeContext__Group__0");
					put(grammarAccess.getNativeContextAccess().getGroup_1(), "rule__NativeContext__Group_1__0");
					put(grammarAccess.getNativeContextAccess().getGroup_2(), "rule__NativeContext__Group_2__0");
					put(grammarAccess.getNativeContextAccess().getGroup_3(), "rule__NativeContext__Group_3__0");
					put(grammarAccess.getNativeContextAccess().getGroup_3_2(), "rule__NativeContext__Group_3_2__0");
					put(grammarAccess.getNativeContextAccess().getGroup_4(), "rule__NativeContext__Group_4__0");
					put(grammarAccess.getQuickFixAccess().getGroup(), "rule__QuickFix__Group__0");
					put(grammarAccess.getQualifiedIDAccess().getGroup(), "rule__QualifiedID__Group__0");
					put(grammarAccess.getQualifiedIDAccess().getGroup_0(), "rule__QualifiedID__Group_0__0");
					put(grammarAccess.getValidModelAccess().getImportsAssignment_0(), "rule__ValidModel__ImportsAssignment_0");
					put(grammarAccess.getValidModelAccess().getCategoriesAssignment_1(), "rule__ValidModel__CategoriesAssignment_1");
					put(grammarAccess.getImportAccess().getPackageAssignment_1(), "rule__Import__PackageAssignment_1");
					put(grammarAccess.getCategoryAccess().getNameAssignment_1(), "rule__Category__NameAssignment_1");
					put(grammarAccess.getCategoryAccess().getLabelAssignment_3(), "rule__Category__LabelAssignment_3");
					put(grammarAccess.getCategoryAccess().getDescriptionAssignment_4_1(), "rule__Category__DescriptionAssignment_4_1");
					put(grammarAccess.getCategoryAccess().getRulesAssignment_6(), "rule__Category__RulesAssignment_6");
					put(grammarAccess.getNativeRuleAccess().getOptionalAssignment_0_0(), "rule__NativeRule__OptionalAssignment_0_0");
					put(grammarAccess.getNativeRuleAccess().getCheckKindAssignment_0_1(), "rule__NativeRule__CheckKindAssignment_0_1");
					put(grammarAccess.getNativeRuleAccess().getSeverityAssignment_1(), "rule__NativeRule__SeverityAssignment_1");
					put(grammarAccess.getNativeRuleAccess().getNameAssignment_2(), "rule__NativeRule__NameAssignment_2");
					put(grammarAccess.getNativeRuleAccess().getLabelAssignment_4(), "rule__NativeRule__LabelAssignment_4");
					put(grammarAccess.getNativeRuleAccess().getDescriptionAssignment_5_1(), "rule__NativeRule__DescriptionAssignment_5_1");
					put(grammarAccess.getNativeRuleAccess().getMessageAssignment_7(), "rule__NativeRule__MessageAssignment_7");
					put(grammarAccess.getNativeRuleAccess().getContextsAssignment_10(), "rule__NativeRule__ContextsAssignment_10");
					put(grammarAccess.getSizeRuleAccess().getOptionalAssignment_0_0(), "rule__SizeRule__OptionalAssignment_0_0");
					put(grammarAccess.getSizeRuleAccess().getCheckKindAssignment_0_1(), "rule__SizeRule__CheckKindAssignment_0_1");
					put(grammarAccess.getSizeRuleAccess().getSeverityAssignment_2(), "rule__SizeRule__SeverityAssignment_2");
					put(grammarAccess.getSizeRuleAccess().getNameAssignment_3(), "rule__SizeRule__NameAssignment_3");
					put(grammarAccess.getSizeRuleAccess().getLabelAssignment_5(), "rule__SizeRule__LabelAssignment_5");
					put(grammarAccess.getSizeRuleAccess().getDescriptionAssignment_6_1(), "rule__SizeRule__DescriptionAssignment_6_1");
					put(grammarAccess.getSizeRuleAccess().getMessageAssignment_7_1(), "rule__SizeRule__MessageAssignment_7_1");
					put(grammarAccess.getSizeRuleAccess().getMinAssignment_9_0(), "rule__SizeRule__MinAssignment_9_0");
					put(grammarAccess.getSizeRuleAccess().getMaxAssignment_10(), "rule__SizeRule__MaxAssignment_10");
					put(grammarAccess.getSizeRuleAccess().getContextsAssignment_13(), "rule__SizeRule__ContextsAssignment_13");
					put(grammarAccess.getRangeRuleAccess().getOptionalAssignment_0_0(), "rule__RangeRule__OptionalAssignment_0_0");
					put(grammarAccess.getRangeRuleAccess().getCheckKindAssignment_0_1(), "rule__RangeRule__CheckKindAssignment_0_1");
					put(grammarAccess.getRangeRuleAccess().getSeverityAssignment_2(), "rule__RangeRule__SeverityAssignment_2");
					put(grammarAccess.getRangeRuleAccess().getNameAssignment_3(), "rule__RangeRule__NameAssignment_3");
					put(grammarAccess.getRangeRuleAccess().getLabelAssignment_5(), "rule__RangeRule__LabelAssignment_5");
					put(grammarAccess.getRangeRuleAccess().getDescriptionAssignment_6_1(), "rule__RangeRule__DescriptionAssignment_6_1");
					put(grammarAccess.getRangeRuleAccess().getMessageAssignment_7_1(), "rule__RangeRule__MessageAssignment_7_1");
					put(grammarAccess.getRangeRuleAccess().getMinAssignment_9_0(), "rule__RangeRule__MinAssignment_9_0");
					put(grammarAccess.getRangeRuleAccess().getMaxAssignment_10(), "rule__RangeRule__MaxAssignment_10");
					put(grammarAccess.getRangeRuleAccess().getContextsAssignment_13(), "rule__RangeRule__ContextsAssignment_13");
					put(grammarAccess.getUniqueRuleAccess().getOptionalAssignment_0_0(), "rule__UniqueRule__OptionalAssignment_0_0");
					put(grammarAccess.getUniqueRuleAccess().getCheckKindAssignment_0_1(), "rule__UniqueRule__CheckKindAssignment_0_1");
					put(grammarAccess.getUniqueRuleAccess().getSeverityAssignment_2(), "rule__UniqueRule__SeverityAssignment_2");
					put(grammarAccess.getUniqueRuleAccess().getNameAssignment_3(), "rule__UniqueRule__NameAssignment_3");
					put(grammarAccess.getUniqueRuleAccess().getLabelAssignment_5(), "rule__UniqueRule__LabelAssignment_5");
					put(grammarAccess.getUniqueRuleAccess().getDescriptionAssignment_6_1(), "rule__UniqueRule__DescriptionAssignment_6_1");
					put(grammarAccess.getUniqueRuleAccess().getMessageAssignment_7_1(), "rule__UniqueRule__MessageAssignment_7_1");
					put(grammarAccess.getUniqueRuleAccess().getContextsAssignment_10(), "rule__UniqueRule__ContextsAssignment_10");
					put(grammarAccess.getSimpleContextAccess().getContextTypeAssignment_0(), "rule__SimpleContext__ContextTypeAssignment_0");
					put(grammarAccess.getSimpleContextAccess().getContextFeatureAssignment_1_1(), "rule__SimpleContext__ContextFeatureAssignment_1_1");
					put(grammarAccess.getDuplicateContextAccess().getContextTypeAssignment_0(), "rule__DuplicateContext__ContextTypeAssignment_0");
					put(grammarAccess.getDuplicateContextAccess().getContextFeatureAssignment_1_1(), "rule__DuplicateContext__ContextFeatureAssignment_1_1");
					put(grammarAccess.getDuplicateContextAccess().getMarkerTypeAssignment_3(), "rule__DuplicateContext__MarkerTypeAssignment_3");
					put(grammarAccess.getDuplicateContextAccess().getMarkerFeatureAssignment_5(), "rule__DuplicateContext__MarkerFeatureAssignment_5");
					put(grammarAccess.getNativeContextAccess().getContextTypeAssignment_0(), "rule__NativeContext__ContextTypeAssignment_0");
					put(grammarAccess.getNativeContextAccess().getContextFeatureAssignment_1_1(), "rule__NativeContext__ContextFeatureAssignment_1_1");
					put(grammarAccess.getNativeContextAccess().getNamedAssignment_2_0(), "rule__NativeContext__NamedAssignment_2_0");
					put(grammarAccess.getNativeContextAccess().getGivenNameAssignment_2_1(), "rule__NativeContext__GivenNameAssignment_2_1");
					put(grammarAccess.getNativeContextAccess().getMarkerTypeAssignment_3_1(), "rule__NativeContext__MarkerTypeAssignment_3_1");
					put(grammarAccess.getNativeContextAccess().getMarkerFeatureAssignment_3_2_1(), "rule__NativeContext__MarkerFeatureAssignment_3_2_1");
					put(grammarAccess.getNativeContextAccess().getQuickFixesAssignment_4_2(), "rule__NativeContext__QuickFixesAssignment_4_2");
					put(grammarAccess.getQuickFixAccess().getQuickFixKindAssignment_0(), "rule__QuickFix__QuickFixKindAssignment_0");
					put(grammarAccess.getQuickFixAccess().getNameAssignment_2(), "rule__QuickFix__NameAssignment_2");
					put(grammarAccess.getQuickFixAccess().getLabelAssignment_4(), "rule__QuickFix__LabelAssignment_4");
					put(grammarAccess.getQuickFixAccess().getMessageAssignment_6(), "rule__QuickFix__MessageAssignment_6");
					put(grammarAccess.getNativeRuleAccess().getUnorderedGroup_0(), "rule__NativeRule__UnorderedGroup_0");
					put(grammarAccess.getSizeRuleAccess().getUnorderedGroup_0(), "rule__SizeRule__UnorderedGroup_0");
					put(grammarAccess.getRangeRuleAccess().getUnorderedGroup_0(), "rule__RangeRule__UnorderedGroup_0");
					put(grammarAccess.getUniqueRuleAccess().getUnorderedGroup_0(), "rule__UniqueRule__UnorderedGroup_0");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.avaloq.tools.ddk.xtext.valid.ui.contentassist.antlr.internal.InternalValidParser typedParser = (com.avaloq.tools.ddk.xtext.valid.ui.contentassist.antlr.internal.InternalValidParser) parser;
			typedParser.entryRuleValidModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public ValidGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(ValidGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
